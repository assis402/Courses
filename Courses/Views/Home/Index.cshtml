@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager

@model dynamic
@{
    ViewData["Title"] = "Home Page";
    string controller = "Home";

    Feature featureModel = new Feature();
}
<div class="row">
    <div class="col-md-6">
        <div class="my-3 p-3 bg-white rounded shadow">
            <h2><b>Aplicação Web ASP.NET Core - MVC</b></h2>
            <h4>Sistema de gerenciamento de cursos online</h4>
            <hr />

            <p>Esta aplicação foi desenvolvida para iniciar meus estudos na linguagem de programação C# / ASP.NET. Assim, nem todas as opções visíves estão em pleno funcionamento.</p>
            <p>Funcionalidades do sistema:</p>

            - Login <br />
            - Gerenciamento de conta (criação e edição)<br />
            - Validação de CPF<br />
            - Adição de foto de perfil<br />
            <br>
            - Gerenciamento de nível de acesso (criação, edição e remoção)<br />
            - Promoção de nível<br />
            <br>
            - Gerenciamento de "Carteira" (criação, edição e remoção)<br />
            <br>
            - Gerenciamento de cursos (criação, edição e remoção)<br />
            - Matrícula em curso<br />
            <br>
            - Gerenciamento de atualizações<br />
        </div>
    </div>
    <div class="col-md-6">
        <div class="my-3 p-3 bg-white rounded shadow">
            <h4 class="border-bottom border-gray mb-0" style="padding-bottom: 15px">
                Atualizações recentes
                @if (SignInManager.IsSignedIn(User))
                {
                    <a asp-action="InsertUpgrade" asp-controller="@controller" class="editClass btn btn-outline-primary btn-sm px-2">
                        Registrar  &ensp;
                        <i class="fas fa-plus-circle fa-lg" aria-hidden="true"></i>
                    </a>
                }

                else
                {
                    <button type="button" class="editClass btn btn-outline-secondary btn-sm px-2" data-toggle="top" title="Você precisa estar logado" disabled>
                        Registrar  &ensp;
                        <i class="fas fa-plus-circle fa-lg" aria-hidden="true"></i>
                    </button>
                }
            </h4>

            @foreach (Upgrade upgrade in Model.Upgrades)
            {
                <div class="media text-muted pt-3">
                    <div class="dateUpdates mr-2 rounded">@upgrade.Date.ToString("dd/MM")</div>
                    <p class="media-body pb-3 mb-0 small lh-125 border-bottom border-gray">
                        @upgrade.Title
                        <strong class="d-block text-gray-dark">@await Component.InvokeAsync("UserName", upgrade.UserId)</strong>
                    </p>
                </div>
            }

            <small class="d-block text-right mt-3">
                <a href="#">Todas atualizações</a>
            </small>
        </div>

        <div class="my-3 p-3 bg-white rounded shadow">
            <h4 class="border-bottom border-gray mb-0" style="padding-bottom: 15px">
                Recursos a desenvolver
                @if (SignInManager.IsSignedIn(User))
                {
                    <a class="editClass btn btn-outline-primary btn-sm px-2" onclick="InsertFeature('@controller')">
                        Adicionar  &ensp;
                        <i class="fas fa-plus-circle fa-lg" aria-hidden="true"></i>
                    </a>
                }

                else
                {
                    <button type="button" class="editClass btn btn-outline-secondary btn-sm px-2" data-toggle="top" title="Você precisa estar logado" disabled>
                        Adicionar  &ensp;
                        <i class="fas fa-plus-circle fa-lg" aria-hidden="true"></i>
                    </button>
                }
            </h4>

            @foreach (Feature feature in Model.Features)
            {
                <div class="media text-muted pt-3">
                    <div class="dateUpdates mr-2 rounded">@feature.Date.ToString("dd/MM")</div>
                    <p class="media-body pb-3 mb-0 small lh-125 border-bottom border-gray">
                        @feature.Title
                        <strong class="d-block text-gray-dark">@await Component.InvokeAsync("UserName", feature.UserId)</strong>
                    </p>
                </div>
            }

            <small class="d-block text-right mt-3">
                <a href="#">Todos os recursos</a>
            </small>
        </div>
    </div>
</div>
<partial name="_ModalInsertFeature" model="featureModel" />

@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script>
    $(function () {
        $('[data-toggle="tooltip"]').tooltip();
    })


    function InsertFeature(controller) {
        $(".modal").modal("show");

        $(".btnInsertFeature").on('click', function () {
            var url = "/" + controller + "/InsertFeature/";

            $.ajax({
                method: "POST",
                url: url,
                success: function () {
                    alert("Recurso adicionado");
                    location.reload();
                }
            })
        })
    }
</script>
